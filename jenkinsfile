
def templatePath = 'https://github.com/belayaperumal/pipeline-builds/blob/master/openshift-pipeline.yaml'  
def APP_NAME= 'openshift-pipeline-demo1'
try {
   timeout(time: 20, unit: 'MINUTES') {
      def appName="${APP_NAME}"
      def project=""
      node {
        stage("Initialize") {
          project = env.PROJECT_NAME
        }
      }
      node {
         label {
         maven
         }
        stage("Checkout") {
          git url: "https://github.com/efsavage/hello-world-war.git", branch: "master"
        }
        stage("Build WAR") {
          sh "mvn clean package -Popenshift"
          stash name:"war", includes:"target/hello-world-war-1.0.0.war"
        }
      }
      node {
        stage("Build Image") {
          unstash name:"war"
          sh "oc start-build ${appName}-docker --from-file=target/hello-world-war-1.0.0.war -n ${project}"
          timeout(time: 20, unit: 'MINUTES') {
            openshift.withCluster() {
              openshift.withProject() {
                def bc = openshift.selector('bc', "${appName}-docker")
                echo "Found 1 ${bc.count()} buildconfig"
                def blds = bc.related('builds')
                blds.untilEach {
                  return it.object().status.phase == "Complete"
                }
              }
            }  
          }
        }
        stage("Deploy") {
          openshift.withCluster() {
            openshift.withProject() {
              def dc = openshift.selector('dc', "${appName}")
              dc.rollout().status()
            }
          }
        }
      }
   }
} catch (err) {
   echo "in catch block"
   echo "Caught: ${err}"
   currentBuild.result = 'FAILURE'
   throw err
}
